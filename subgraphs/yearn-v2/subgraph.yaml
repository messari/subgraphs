specVersion: 0.0.2
repository: https://github.com/messari/subgraphs
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Registry
    network: mainnet
    source:
      address: "0xe15461b18ee31b7379019dc523231c57d1cbc18c"
      startBlock: 11390000
      abi: Registry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - NewVault
      abis:
        - name: Registry
          file: ./abis/Registry.json
        - name: Vault
          file: ./abis/Vault.json
        - name: ERC20
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: NewVault(indexed address,indexed uint256,address,string)
          handler: handleNewVault
        - event: NewExperimentalVault(indexed address,indexed address,address,string)
          handler: handleNewExperimentalVault
      file: ./src/mappings/registryMappings.ts
  - kind: ethereum/contract
    name: RegistryV2
    network: mainnet
    source:
      address: "0x50c1a2eA0a861A967D9d0FFE2AE4012c2E053804"
      startBlock: 12045550
      abi: Registry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
        - Transaction
      abis:
        - name: Registry
          file: ./abis/Registry.json
        - name: ERC20
          file: ./abis/ERC20Detailed.json
        - name: Vault
          file: ./abis/Vault.json
      eventHandlers:
        - event: NewVault(indexed address,indexed uint256,address,string)
          handler: handleNewVault
        - event: NewExperimentalVault(indexed address,indexed address,address,string)
          handler: handleNewExperimentalVault
      file: ./src/mappings/registryMappings.ts
templates:
  - name: Vault
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/vaultMappings.ts
      entities:
        - Vault
        - Deposit
        - Transaction
        - Token
      abis:
        - name: Vault
          file: ./abis/Vault.json
        - name: Oracle
          file: ./abis/Oracle.json
        - name: CalculationsCurve
          file: ./abis/CalculationsCurve.json
        - name: CalculationsSushiSwap
          file: ./abis/CalculationsSushiSwap.json
      eventHandlers:
        - event: Deposit(indexed address,uint256,uint256)
          handler: handleDepositEvent
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdrawEvent
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: UpdatePerformanceFee(uint256)
          handler: handleUpdatePerformanceFee
        - event: UpdateManagementFee(uint256)
          handler: handleUpdateManagementFee

        # V1: StrategyAdded(strategy,debtLimit,rateLimit,performanceFee)
        - event: StrategyAdded(indexed address,uint256,uint256,uint256)
          handler: handleStrategyAddedV1
        # V2: StrategyAdded(strategy,debtRatio,minDebtPerHarvest,maxDebtPerHarvest,performanceFee)
        - event: StrategyAdded(indexed address,uint256,uint256,uint256,uint256)
          handler: handleStrategyAddedV2

        # Reward address is the treasury address (for accruing protocol revenue)
        - event: UpdateRewards(address)
          handler: handleUpdateRewards

        # We have two handlers to process the StrategyReported event due to incompatibility in both event structure.
        # The "old" one is for vault versions 0.3.0 and 0.3.1.
        # The "new" one is for vault versions 0.3.2 and higher.
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReportedOld
        - event: StrategyReported(indexed address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleStrategyReportedNew

        # - event: UpdateDepositLimit(uint256)
        #   handler: handleUpdateDepositLimit
      callHandlers:
        - function: deposit()
          handler: handleDeposit
        - function: deposit(uint256)
          handler: handleDepositWithAmount
        - function: deposit(uint256,address)
          handler: handleDepositWithAmountAndRecipient
        - function: withdraw()
          handler: handleWithdraw
        - function: withdraw(uint256)
          handler: handleWithdrawWithShares
        - function: withdraw(uint256,address)
          handler: handleWithdrawWithSharesAndRecipient
