specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: MainRegistry
    network: mainnet
    source:
      address: "0x90e00ace148ca3b23ac1bc8c240c2a7dd9c2d7f5"
      startBlock: 12195750
      abi: MainRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - LiquidityPool
      abis:
        - name: MainRegistry
          file: ./abis/MainRegistry.json
        - name: AddressProvider
          file: ./abis/AddressProvider.json
        - name: StableSwap
          file: ./abis/StableSwap.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: CurveRegistry
          file: ./abis/Prices/Curve/Registry.json
        - name: CalculationsCurve
          file: ./abis/Prices/Calculations/Curve.json
        - name: YearnLensContract
          file: ./abis/Prices/YearnLens.json
        # ChainLink Contracts
        - name: ChainLinkContract
          file: ./abis/Prices/ChainLink.json
        - name: ChainLinkManual
          file: ./abis/Prices/ChainLinkManual.json
        # Uniswap Contracts
        - name: UniswapRouter
          file: ./abis/Prices/Uniswap/Router.json
        - name: UniswapFactory
          file: ./abis/Prices/Uniswap/Factory.json
        - name: UniswapFactoryV3
          file: ./abis/Prices/Uniswap/FactoryV3.json
        - name: Quoter
          file: ./abis/Prices/Uniswap/Quoter.json
        - name: UniswapPair
          file: ./abis/Prices/Uniswap/Pair.json
        # SushiSwap Contracts
        - name: SushiSwapRouter
          file: ./abis/Prices/SushiSwap/Router.json
        - name: SushiSwapFactory
          file: ./abis/Prices/SushiSwap/Factory.json
        - name: SushiSwapPair
          file: ./abis/Prices/SushiSwap/Pair.json
        - name: CalculationsSushiSwap
          file: ./abis/Prices/Calculations/SushiSwap.json
        - name: IronBankToken
          file: ./abis/Prices/IronBankToken.json
        - name: Atoken
          file: ./abis/Prices/Atoken.json
        - name: YearnTokenV1
          file: ./abis/Prices/YearnTokenV1.json
        - name: RedeemableKeep3r
          file: ./abis/Prices/RedeemableKeep3r.json
        - name: ChainlinkAggregator
          file: ./abis/Prices/ChainlinkAggregator.json
        - name: CalculationsCompound
          file: ./abis/Prices/Calculations/Compound.json
        - name: CurvePoolCoin128
          file: ./abis/CurvePoolCoin128.json
        - name: CurvePoolCoin256
          file: ./abis/CurvePoolCoin256.json
        - name: CurvePoolV1
          file: ./abis/CurvePoolV1.json
      eventHandlers:
        - event: PoolAdded(indexed address,bytes)
          handler: handlePoolAdded
      file: ./src/mappings/registry.ts
  - kind: ethereum
    name: FirstRegistry
    network: mainnet
    source:
      address: "0x7D86446dDb609eD0F5f8684AcF30380a356b2B4c"
      startBlock: 11154794
      abi: MainRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - LiquidityPool
      abis:
        - name: MainRegistry
          file: ./abis/MainRegistry.json
        - name: AddressProvider
          file: ./abis/AddressProvider.json
        - name: StableSwap
          file: ./abis/StableSwap.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: CurveRegistry
          file: ./abis/Prices/Curve/Registry.json
        - name: CalculationsCurve
          file: ./abis/Prices/Calculations/Curve.json
        - name: YearnLensContract
          file: ./abis/Prices/YearnLens.json
        # ChainLink Contracts
        - name: ChainLinkContract
          file: ./abis/Prices/ChainLink.json
        - name: ChainLinkManual
          file: ./abis/Prices/ChainLinkManual.json
        # Uniswap Contracts
        - name: UniswapRouter
          file: ./abis/Prices/Uniswap/Router.json
        - name: UniswapFactory
          file: ./abis/Prices/Uniswap/Factory.json
        - name: UniswapPair
          file: ./abis/Prices/Uniswap/Pair.json
        # SushiSwap Contracts
        - name: SushiSwapRouter
          file: ./abis/Prices/SushiSwap/Router.json
        - name: SushiSwapFactory
          file: ./abis/Prices/SushiSwap/Factory.json
        - name: SushiSwapPair
          file: ./abis/Prices/SushiSwap/Pair.json
        - name: CalculationsSushiSwap
          file: ./abis/Prices/Calculations/SushiSwap.json
        - name: IronBankToken
          file: ./abis/Prices/IronBankToken.json
        - name: Atoken
          file: ./abis/Prices/Atoken.json
        - name: YearnTokenV1
          file: ./abis/Prices/YearnTokenV1.json
        - name: CurvePoolCoin128
          file: ./abis/CurvePoolCoin128.json
        - name: CurvePoolCoin256
          file: ./abis/CurvePoolCoin256.json
        - name: CurvePoolV1
          file: ./abis/CurvePoolV1.json
      eventHandlers:
        - event: PoolAdded(indexed address,bytes)
          handler: handlePoolAdded
      file: ./src/mappings/registry.ts
  # Address provider for registry contracts
  - name: AddressProvider
    kind: ethereum/contract
    network: mainnet
    source:
      abi: AddressProvider
      address: '0x0000000022d53366457f9d5e68ec105046fc4383'
      startBlock: 11153725
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/addressProvider.ts
      abis:
        - name: AddressProvider
          file: ./abis/AddressProvider.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: StableSwap
          file: ./abis/StableSwap.json
        - name: CurvePoolCoin128
          file: ./abis/CurvePoolCoin128.json
        - name: CurvePoolCoin256
          file: ./abis/CurvePoolCoin256.json
        - name: CurvePoolV1
          file: ./abis/CurvePoolV1.json
      entities:
        - LiquidityPool
      eventHandlers:
        - event: AddressModified(indexed uint256,address,uint256)
          handler: handleAddressModified
        - event: NewAddressIdentifier(indexed uint256,address,string)
          handler: handleNewAddressIdentifier
  {{#Pools}}
  - name: {{name}}
    kind: ethereum/contract
    network: mainnet
    source:
      abi: StableSwap
      address: '{{address}}'
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      abis:
        - name: StableSwap
          file: ./abis/StableSwap.json
        - name: MainRegistry
          file: ./abis/MainRegistry.json
        - name: AddressProvider
          file: ./abis/AddressProvider.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: CurvePoolCoin128
          file: ./abis/CurvePoolCoin128.json
        - name: CurvePoolCoin256
          file: ./abis/CurvePoolCoin256.json
        - name: CurvePoolV1
          file: ./abis/CurvePoolV1.json
      entities: 
        - LiquidityPool
      eventHandlers:
        - event: AddLiquidity(indexed address,uint256[2],uint256[2],uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(indexed address,uint256[2],uint256[2],uint256)
          handler: handleRemoveLiquidity
        - event: RemoveLiquidityImbalance(indexed address,uint256[2],uint256[2],uint256,uint256)
          handler: handleRemoveLiquidityImbalance
        - event: RemoveLiquidityOne(indexed address,uint256,uint256)
          handler: handleRemoveLiquidityOne
        - event: TokenExchange(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchange
        - event: TokenExchangeUnderlying(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchangeUnderlying
        - event: NewFee(uint256,uint256)
          handler: handleNewFee
  {{/Pools}}
templates:
  # Main pool contract
  - name: Pool
    kind: ethereum/contract
    network: mainnet
    source:
      abi: StableSwap
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities: [ ]
      abis:
        - name: StableSwap
          file: ./abis/StableSwap.json
        - name: MainRegistry
          file: ./abis/MainRegistry.json
        - name: AddressProvider
          file: ./abis/AddressProvider.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: CurvePoolCoin128
          file: ./abis/CurvePoolCoin128.json
        - name: CurvePoolCoin256
          file: ./abis/CurvePoolCoin256.json
        - name: CurvePoolV1
          file: ./abis/CurvePoolV1.json
      eventHandlers:
        - event: AddLiquidity(indexed address,uint256[2],uint256[2],uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(indexed address,uint256[2],uint256[2],uint256)
          handler: handleRemoveLiquidity
        - event: RemoveLiquidityImbalance(indexed address,uint256[2],uint256[2],uint256,uint256)
          handler: handleRemoveLiquidityImbalance
        - event: RemoveLiquidityOne(indexed address,uint256,uint256)
          handler: handleRemoveLiquidityOne
        - event: TokenExchange(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchange
        - event: TokenExchangeUnderlying(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchangeUnderlying
        - event: NewFee(uint256,uint256)
          handler: handleNewFee