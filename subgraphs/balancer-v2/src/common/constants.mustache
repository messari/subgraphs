import { BigDecimal, BigInt, Address, dataSource } from "@graphprotocol/graph-ts";

////////////////////////
///// Schema Enums /////
////////////////////////

// The network names corresponding to the Network enum in the schema.
// They also correspond to the ones in `dataSource.network()` after converting to lower case.
// See below for a complete list:
// https://thegraph.com/docs/en/hosted-service/what-is-hosted-service/#supported-networks-on-the-hosted-service
export namespace Network {
    export const ARBITRUM_ONE = "ARBITRUM_ONE";
    export const AVALANCHE = "AVALANCHE";
    export const AURORA = "AURORA";
    export const BSC = "BSC"; // aka BNB Chain
    export const CELO = "CELO";
    export const MAINNET = "MAINNET"; // Ethereum mainnet
    export const FANTOM = "FANTOM";
    export const FUSE = "FUSE";
    export const MOONBEAM = "MOONBEAM";
    export const MOONRIVER = "MOONRIVER";
    export const NEAR_MAINNET = "NEAR_MAINNET";
    export const OPTIMISM = "OPTIMISM";
    export const MATIC = "MATIC"; // aka Polygon
    export const XDAI = "XDAI"; // aka Gnosis Chain
}

export namespace ProtocolType {
    export const EXCHANGE = "EXCHANGE";
    export const LENDING = "LENDING";
    export const YIELD = "YIELD";
    export const BRIDGE = "BRIDGE";
    export const GENERIC = "GENERIC";
}

export namespace VaultFeeType {
    export const MANAGEMENT_FEE = "MANAGEMENT_FEE";
    export const PERFORMANCE_FEE = "PERFORMANCE_FEE";
    export const DEPOSIT_FEE = "DEPOSIT_FEE";
    export const WITHDRAWAL_FEE = "WITHDRAWAL_FEE";
}

export namespace LiquidityPoolFeeType {
    export const FIXED_TRADING_FEE = "FIXED_TRADING_FEE";
    export const TIERED_TRADING_FEE = "TIERED_TRADING_FEE";
    export const DYNAMIC_TRADING_FEE = "DYNAMIC_TRADING_FEE";
    export const FIXED_PROTOCOL_FEE = "FIXED_PROTOCOL_FEE";
    export const DYNAMIC_PROTOCOL_FEE = "DYNAMIC_PROTOCOL_FEE";
}

export namespace RewardTokenType {
    export const DEPOSIT = "DEPOSIT";
    export const BORROW = "BORROW";
}
//////////////////////////////
///// Ethereum Addresses /////
//////////////////////////////

export const ZERO_ADDRESS = "0x0000000000000000000000000000000000000000";

////////////////////////
///// Type Helpers /////
////////////////////////

export const DEFAULT_DECIMALS = 18;

export const BIGINT_ZERO = BigInt.fromI32(0);
export const BIGINT_ONE = BigInt.fromI32(1);
export const BIGINT_TWO = BigInt.fromI32(2);
export const BIGINT_THOUSAND = BigInt.fromI32(1000);

export const INT_ZERO = 0 as i32;
export const INT_ONE = 1 as i32;

export const BIGDECIMAL_ZERO = new BigDecimal(BIGINT_ZERO);
export const BIGDECIMAL_ONE = new BigDecimal(BIGINT_ONE);
export const BIGDECIMAL_TWO = new BigDecimal(BIGINT_TWO);


/////////////////////
///// Date/Time /////
/////////////////////

export const SECONDS_PER_DAY = 60 * 60 * 24; // 86400
export const SECONDS_PER_HOUR = 60 * 60;

/////////////////////////////
///// Protocol Specific /////
/////////////////////////////

export let VAULT_ADDRESS = Address.fromString('{{vault}}')
export let FEE_COLLECTOR_ADDRESS = Address.fromString('{{feeCollector}}')
export let WETH: Address = Address.fromString('{{knownAssets.weth}}');
export let WMATIC: Address = Address.fromString('{{knownAssets.wmatic}}');
export let WBTC: Address = Address.fromString('{{knownAssets.wbtc}}');
export let USDC: Address = Address.fromString('{{knownAssets.usdc}}');
export let USDT: Address = Address.fromString('{{knownAssets.usdt}}');
export let BAL: Address = Address.fromString('{{knownAssets.bal}}');
export let DAI: Address = Address.fromString('{{knownAssets.dai}}');

export let USD_STABLE_ASSETS: Address[] = [USDC, DAI, USDT];
export let BASE_ASSETS: Address[] = [WETH, WMATIC, WBTC, BAL];
