version: "3.8"
services:
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: ipfs:5002
      # Cf. https://docs.docker.com/compose/environment-variables/#substitute-environment-variables-in-compose-files
      ethereum: "${NETWORK}:${ETHEREUM_NODE_RPC_URL}"
      GRAPH_LOG: info
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048M
  ipfs:
    image: ipfs/js-ipfs:v0.63.2
    ports:
      # We expose port 4002 for the sake of running this container on AWS ECS -- it was the only workable
      # solution to providing an endpoint that would satisfy the ELB's default health check (request to
      # path /, requiring a 200 response).
      - "4002:4002"
      - "5002:5002"
    volumes:
      - ipfs-data:/data/ipfs
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048M
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - postgres-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048M
volumes:
  ipfs-data:
  postgres-data:
